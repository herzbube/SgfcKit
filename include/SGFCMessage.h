// -----------------------------------------------------------------------------
// Copyright 2020 Patrick NÃ¤f (herzbube@herzbube.ch)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------

#pragma once

// Project includes
#import "SGFCMessageID.h"
#import "SGFCMessageType.h"

// System includes
#import <Foundation/NSObject.h>

/// @brief The SGFCMessage class represents a message that is generated
/// when SGF data is loaded and parsed, or when SGF data is saved. Most
/// messages are generated by SGFC, but there are a few error cases where
/// SgfcKit also generates messages. SGFCMessage objects are immutable.
///
/// @ingroup public-api
/// @ingroup sgfc-message
///
/// Do @b NOT attempt to create an SGFCMessage object yourself, instead
/// always use the SGFCMessage objects provided by other library objects (e.g.
/// an SGFCDocumentReaderResult instance).
@interface SGFCMessage : NSObject
{
}

/// @brief Do @b NOT use this initializer.
- (instancetype) init NS_UNAVAILABLE;

/// @brief Returns the message's unique identification number.
///
/// Every message generated by SGFC has its own unique message ID. Consult
/// the SGFC documentation for a list of message IDs. SGFC calls them
/// "error codes". The exception is when SgfcKit is unable to determine
/// the message ID when it parses the raw message text - if that happens
/// SgfcKit sets the message ID to #SGFCUnknownSgfcMessageID.
///
/// Every message generated by SgfcKit also has its own unique message
/// ID that is distinct from all SGFC-generated message IDs.
///
/// @see SgfcMessageID
@property(nonatomic, readonly) SGFCMessageID messageID;

/// @brief Returns the type of message.
///
/// Messages generated by SGFC can be of all types. Messages generated by
/// SgfcKit are always fatal errors (although this may change in the
/// future).
///
/// @attention For SGFC-generated messages one and the same message ID can
/// have different message types, depending on the context in which the
/// message is generated. Examples: #SGFCMessageIDEmptyValueDeleted,
/// #SGFCMessageIDIllegalSingleValueCorrected, etc.. Refer to the SGFC
/// documentation for details.
@property(nonatomic, readonly) SGFCMessageType messageType;

/// @brief Returns the number of the line (1-based) in the parsed SGF data
/// that caused the message. Returns #SGFCInvalidLineNumber if
/// the message does not refer to a specific line in the SGF data (most
/// fatal errors, but also some errors and warnings).
@property(nonatomic, readonly) NSInteger lineNumber;

/// @brief Returns the number of the column (1-based) in the parsed SGF data
/// that caused the message. Returns #SGFCInvalidColumnNumber if
/// the message does not refer to a specific column in the SGF data (most
/// fatal errors, but also some errors and warnings).
@property(nonatomic, readonly) NSInteger columnNumber;

/// @brief Returns YES if the message describes a critical problem. Only
/// warning and error messages can be critical. Always returns NO for
/// fatal errors.
///
/// A critical problem indicates that the SGF content parsed by SGFC may be
/// severely damaged and that information may be lost if the parsed SGF data
/// is written.
@property(nonatomic, readonly, getter=isCriticalMessage) BOOL criticalMessage;

/// @brief Returns an error number that indicates what went wrong when a
/// standard C library function was invoked by SGFC. The value 0 (zero)
/// indicates "no error", a non-zero value indicates an error.
///
/// As a convenience the library provides the constant
/// SGFCLibraryErrorNumberNoError in case you prefer to use
/// a constant to implement your program logic.
///
/// A non-zero value is a copy of the global @e errno value, made shortly
/// after the failing function call. In the unlikely case that you need
/// to evaluate this, consult the standard C library documentation of
/// @e errno.
///
/// In case this method returns a non-zero error number, the text returned
/// by GetFormattedMessageText() already includes an error message that
/// results from invoking @e strerror() with the error number.
///
/// @note Messages for which this method returns a non-zero value are
/// usually fatal error messages related to file I/O. There is no guarantee
/// that this will always be the case, though.
///
/// @note This method always returns 0 (zero) for messages generated by
/// SGFC.
@property(nonatomic, readonly) NSInteger libraryErrorNumber;

/// @brief Returns the message text.
@property(nonatomic, strong, readonly) NSString* messageText;

/// @brief Returns the formatted message text as if it had been printed by
/// SGFC on the command-line. If the message was generated by SgfcKit this
/// returns the same value as messageText().
///
/// When the command-line version of SGFC prints messages it assembles the
/// individual message parts into a formatted text. SgfcKit emulates
/// this formatting as closely as possible to generate the value returned
/// by this method. There is no guarantee for an exact match, though.
@property(nonatomic, strong, readonly) NSString* formattedMessageText;

@end
