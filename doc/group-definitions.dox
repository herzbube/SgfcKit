This file contains Doxygen group definitions. The groups defined here with
@defgroup are referenced from source code files with @ingroup.


/// @defgroup public-api Public API
///
/// @brief The Public API module contains types that belong to the public API of
/// the library.


/// @defgroup internals Internals
///
/// @brief The Internals module contains types that are internals, or private
/// implementation details of the library.
///
/// All types that do not belong to the @ref public-api module are in the
/// Internals module.


/// @defgroup factory Factory
///
/// @brief The Factory module contains factory classes, i.e. classes that
/// contain functions to create concrete objects.


/// @defgroup sgfc SGFC
///
/// @brief The SGFC module contains classes that are concerned with interfacing
/// with SGFC.


/// @defgroup sgfc-arguments SGFC Arguments
///
/// @ingroup sgfc
///
/// @brief The SGFC Arguments module contains classes that are concerned with
/// passing arguments to SGFC operations.


/// @defgroup sgfc-backend SGFC Backend
///
/// @ingroup sgfc
///
/// @brief The SGFC Backend module contains the library-internal backend
/// functionality for interfacing with SGFC.
///
/// The backend functionality in this module is used internally by the
/// front-facing public API classes in the @ref sgfc-frontend module. The
/// backend functionality has no direct representation in the library's public
/// API.


/// @defgroup sgfc-frontend SGFC Frontend
///
/// @ingroup sgfc
///
/// @brief The SGFC Frontend module contains the library's public front-facing
/// functionality for interfacing with SGFC.
///
/// Unlike the @ref sgfc-backend module, all classes in the SGFC Frontend module
/// have a direct representation in the library's public API.


/// @defgroup sgfc-message SGFC Message
///
/// @ingroup sgfc
///
/// @brief The SGFC Message module contains classes that are concerned with the
/// messages generated by SGFC.


/// @defgroup parsing Parsing
///
/// @brief The Parsing module contains classes that are concerned with parsing
/// the output of SGFC or the input to SGFC.


/// @defgroup document Document
///
/// @brief The Document module contains functionality related to the library's
/// concept of a "document".


/// @defgroup game-tree Game Tree
///
/// @brief The Game Tree module contains functionality related to SGF game
/// trees.


/// @defgroup property Property
///
/// @brief The Property module contains functionality related to SGF properties.


/// @defgroup property-value Property Value
///
/// @brief The Property Value module contains functionality related to SGF
/// property values.


/// @defgroup game Game
///
/// @brief The Game module contains functionality related to game concepts such
/// as "board size" or "coordinate system".


/// @defgroup go Go
///
/// @ingroup game
///
/// @brief The Go module contains functionality related to concepts from the
/// game of Go.
///
/// The library treats the game of Go as a first-class citizen, just like SGFC,
/// in that it contains functions and types that are tailored towards Go. Other
/// game types are only supported in a generic way.


/// @defgroup library-support Library Support
///
/// @brief The Library Support module is the bucket that contains bits and bytes
/// that don't fit any other module.
